type Query {
  activity(id: ID!): Activity!
  activityList(count: Int!, page: Int): [Activity!]!
  athleteStats(id: ID!, type: String!): AthleteStats!
}

type Activity {
  id: ID!
  name: String!
  type: String!
  distance: Float
  movingTime: Int
  elapsedTime: Int
  totalElevationGain: Float
  startDate: String
  averageSpeed: String
  maxSpeed: Float
  hasHeartrate: Boolean
  averageHeartrate: Float
  maxHeartrate: Float
  calories: Int
  map: Map
  gear: Gear
}

type Map {
  id: ID!
  polyline: String
  summaryPolyline: String
}

type Gear {
  id: ID!
  name: String!
  distance: Int
}

type AthleteStats {
  allRunTotal: AllTotal
  allRideTotal: AllTotal
  allSwimTotal: AllTotal
}

type AllTotal {
  count: Int
  distance: Float
  movingTime: Int
  elapsedTime: Int
  elevationGain: Float
}
